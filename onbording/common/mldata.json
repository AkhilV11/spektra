{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "demouser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Password.1!!",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "AzureUserName": {
      "type": "string"
    },
    "AzurePassword": {
      "type": "securestring"
    },
    "COVID19Articles_Test": {
      "type": "String",
      "defaultValue": "https://experienceazure.blob.core.windows.net/templates/ai-iad/ai-iad-combined/test.csv",
      "metadata": {
        "description": "The Http URL."
      }
    },
    "COVID19Articles_Train": {
      "type": "String",
      "defaultValue": "https://experienceazure.blob.core.windows.net/templates/ai-iad/ai-iad-combined/train.csv",
      "metadata": {
        "description": "The Http URL."
      }
    },
    "datasetNametest": {
      "type": "String",
      "defaultValue": "COVID19Articles_Test",
      "metadata": {
        "description": "The name of the dataset."
      }
    },
    "datasetNametrain": {
      "type": "String",
      "defaultValue": "COVID19Articles_Train",
      "metadata": {
        "description": "The name of the dataset."
      }
    },
    "datasetDescription": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional : The description for the dataset."
      }
    },
    "sourceType": {
      "defaultValue": "delimited_files",
      "allowedValues": [
        "delimited_files",
        "json_lines_files",
        "parquet_files"
      ],
      "type": "String",
      "metadata": {
        "description": "Data source type"
      }
    },
    "separator": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional: The separator used to split columns for 'delimited_files' sourceType, default to ',' for 'delimited_files'"
      }
    },
    "header": {
      "defaultValue": "all_files_have_same_headers",
      "allowedValues": [
        "all_files_have_same_headers",
        "only_first_file_has_headers",
        "no_headers",
        "combine_all_files_headers"
      ],
      "type": "String",
      "metadata": {
        "description": "Optional :  Header type. Defaults to 'all_files_have_same_headers'"
      }
    },
    "fineGrainTimestamp": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional : Column name to be used as FineGrainTimestamp"
      }
    },
    "coarseGrainTimestamp": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Optional : Column name to be used as CoarseGrainTimestamp. Can only be used if 'fineGrainTimestamp' is specified and cannot be same as 'fineGrainTimestamp'."
      }
    },
    "tags": {
      "defaultValue": {},
      "type": "Object",
      "metadata": {
        "description": "Optional : Provide JSON object with 'key,value' pairs to add as tags on dataset. Example- {\"sampleTag1\": \"tagValue1\", \"sampleTag2\": \"tagValue2\"}"
      }
    },
    "skipValidation": {
      "defaultValue": false,
      "type": "Bool",
      "metadata": {
        "description": "Optional :  Skip validation that ensures data can be loaded from the dataset before registration."
      }
    },
    "includePath": {
      "defaultValue": false,
      "type": "Bool",
      "metadata": {
        "description": "Optional :  Boolean to keep path information as column in the dataset. Defaults to False. This is useful when reading multiple files, and want to know which file a particular record originated from, or to keep useful information in file path."
      }
    },
    "amlWorkspaceName": {
      "type": "string",
      "defaultValue": "ai-in-a-day-",
      "metadata": {
        "description": "The name of the Azure Databricks workspace to create."
      }
    },
    "azuserobjectid": {
      "type": "string"
    },
    "ODLID": {
      "type": "string"
    },
    "DeploymentID": {
      "type": "string"
    },
    "workspaceName": {
      "type": "String"
    },
    "InstallCloudLabsShadow": {
      "type": "string",
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },
    "diskStorageType": {
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "type": "String"
    }
  },
  "variables": {
    "cloudlabsCommon": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'), ' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'), ' -ODLID ', parameters('ODLID'), ' -DeploymentID ', parameters('DeploymentID'),' -InstallCloudLabsShadow ', parameters('InstallCloudLabsShadow'), ' -rgName ', variables('rgname'), ' -cognitiveservicename ', variables('serviceName'))]",
    "AzureSubscriptionID": "[subscription().subscriptionId]",
    "AzureTenantID": "[subscription().tenantId]",
    "networkSecurityGroupName": "nsg-jumpvm",
    "rgname": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
    "nicName": "jumpvmnic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "vmName": "[concat('labvm-', parameters('DeploymentID'))]",
    "virtualNetworkName": "vnet1",
    "publicIPAddressName": "pip-jumpvm",
    "dnsNameForPublicIP": "[concat('labvm-', uniqueString(resourceGroup().id))]",
    "storageaccountname": "[concat('aiinadaystorage', parameters('DeploymentID'))]",
    "storageAccountId": "[concat('/subscriptions/', variables('AzureSubscriptionID'), '/resourcegroups/', variables('rgname'),'/providers/Microsoft.Storage/storageAccounts/',variables('storageaccountname'))]",
    "resourceNamePrefix": "aiinaday",
    "mlstorageaccountname": "[concat('mlstrg', parameters('DeploymentID'))]",
    "keyvaultname": "[concat(variables('resourceNamePrefix'), '-kv-', parameters('DeploymentID'))]",
    "appinsightname": "[concat(variables('resourceNamePrefix'), '-appinsight-', parameters('DeploymentID'))]",
    "containerregistryname": "[concat('techimmersioncr', parameters('DeploymentID'))]",
    "amlworkspacename": "[concat(parameters('amlWorkspaceName'), parameters('DeploymentID'))]",
    "keyVaultId": "[concat('/subscriptions/', variables('AzureSubscriptionID'), '/resourcegroups/', variables('rgname'),'/providers/Microsoft.KeyVault/vaults/',variables('keyvaultname'))]",
    "mlstorageAccountId": "[concat('/subscriptions/', variables('AzureSubscriptionID'), '/resourcegroups/', variables('rgname'),'/providers/Microsoft.Storage/storageAccounts/',variables('mlstorageaccountname'))]",
    "appInsightsId": "[concat('/subscriptions/', variables('AzureSubscriptionID'), '/resourcegroups/', variables('rgname'),'/providers/Microsoft.Insights/components/',variables('appinsightname'))]",
    "containerRegistryId": "[concat('/subscriptions/', variables('AzureSubscriptionID'), '/resourcegroups/', variables('rgname'),'/providers/Microsoft.ContainerRegistry/registries/',variables('containerregistryname'))]",
    "managedResourceGroupName": "[concat('databricks-rg-', variables('resourceNamePrefix'), '-', parameters('DeploymentID'))]",
    "workspaceName": "ai-adb-ws",
    "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
    "cognitiveservicename": "[concat('aiinaday-cogsv', parameters('DeploymentID'))]",
    "serviceName": "[concat('aiinaday-cog-', parameters('DeploymentID'))]",
    "predictionname": "[concat('aiinaday-luis-pred-', parameters('DeploymentID'))]",
    "authoringName": "[concat('aiinaday-luis-auth-', parameters('DeploymentID'))]",
    "apiVersion": "2020-08-01",
    "speechname": "[concat('aiinaday-speech', parameters('DeploymentID'))]",
    "metricadvisorname": "[concat('metricadvisor-', parameters('DeploymentID'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 120,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          },
          {
            "name": "sql",
            "properties": {
              "priority": 130,
              "protocol": "*",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "1433"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('publicIPAddressName')]",
        "[variables('virtualNetworkName')]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[variables('nicName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "id": "/subscriptions/29c465b3-aedf-44db-8807-b933cd374bcc/resourceGroups/cloudlabs-mgmt/providers/Microsoft.Compute/galleries/aiw_ds_sig/images/ai-in-a-day-combined/versions/0.0.2"
            //subscriptions/168f2e0e-33e6-4da1-96a1-2a1508aa80dd/resourceGroups/aec-mgmt-rg/providers/Microsoft.Compute/galleries/imageGallery/images/ai-in-a-day-combined/versions/0.0.2
            //subscriptions/877d4dbe-5af8-4b6e-835a-a40d1f31c5da/resourceGroups/aec-mgmt-rg/providers/Microsoft.Compute/galleries/SharedImageGallery/images/aiadvm-image-20211702/versions/0.0.4
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),'OSDisk')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('diskStorageType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "CustomScriptExtension",
          "apiVersion": "2017-03-30",
          "location": "[variables('location')]",
          "dependsOn": [
            "[variables('vmName')]",
            "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('amlworkspacename'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://experienceazure.blob.core.windows.net/templates/cloudlabs-common/cloudlabs-windows-functions.ps1",
                "https://experienceazure.blob.core.windows.net/templates/ai-iad/ai-iad-combined/scripts/script-01.ps1"

              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Bypass -File ai-iad/ai-iad-combined/scripts/script-01.ps1', ' ',variables('cloudlabsCommon'))]"
            }
          }
        }
      ]
    },
    {
      "name": "[variables('storageaccountname')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "location": "[variables('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "accessTier": "Hot"
      },
      "resources": [
        {
          "name": "[concat('default/', 'covid19temp')]",
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "dependsOn": [
            "[variables('storageaccountname')]"
          ]
        },
        {
          "type": "blobServices/containers",
          "apiVersion": "2018-07-01",
          "name": "[concat('default/', 'jsonmetrics')]",
          "dependsOn": [
            "[variables('storageaccountname')]"
          ]
        }
      ]
    },
    {
      "name": "[variables('mlstorageaccountname')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "location": "[variables('location')]",
      "properties": {
        "supportsHttpsTrafficOnly": "false"
      },
      "dependsOn": [],
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "apiVersion": "2020-03-01",
      "name": "[variables('amlworkspacename')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.MachineLearningServices/workspaces",
      "properties": {
        "containerRegistry": "[variables('containerRegistryId')]",
        "keyVault": "[variables('keyVaultId')]",
        "storageAccount": "[variables('mlstorageAccountId')]",
        "applicationInsights": "[variables('appInsightsId')]"
      },
      "sku": {
        "tier": "enterprise",
        "name": "enterprise"
      },
      "identity": {
        "type": "systemAssigned"
      },
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyvaultname'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('mlstorageaccountname'))]",
        "[concat('microsoft.insights/components/', variables('appinsightname'))]",
        "[concat('Microsoft.ContainerRegistry/registries/', variables('containerregistryname'))]"
      ]
    },

    {
      "type": "Microsoft.MachineLearningServices/workspaces/datasets",
      "apiVersion": "2020-05-01-preview",
      "name": "[concat(variables('amlworkspacename'), '/', parameters('datasetNametest'))]",
      "location": "[variables('location')]",
      "properties": {
        "SkipValidation": "[parameters('skipValidation')]",
        "DatasetType": "tabular",
        "Parameters": {
          "Header": "[parameters('header')]",
          "IncludePath": "[parameters('includePath')]",
          "Path": {
            "HttpUrl": "[parameters('COVID19Articles_Test')]"
          },
          "Separator": "[parameters('separator')]",
          "SourceType": "[parameters('sourceType')]"
        },
        "Registration": {
          "Description": "[parameters('datasetDescription')]",
          "Tags": "[parameters('tags')]"
        },
        "TimeSeries": {
          "FineGrainTimestamp": "[parameters('fineGrainTimestamp')]",
          "CoarseGrainTimestamp": "[parameters('coarseGrainTimestamp')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('amlworkspacename'))]"
      ]
    },

    {
      "type": "Microsoft.MachineLearningServices/workspaces/datasets",
      "apiVersion": "2020-05-01-preview",
      "name": "[concat(variables('amlworkspacename'), '/', parameters('datasetNametrain'))]",
      "location": "[variables('location')]",
      "properties": {
        "SkipValidation": "[parameters('skipValidation')]",
        "DatasetType": "tabular",
        "Parameters": {
          "Header": "[parameters('header')]",
          "IncludePath": "[parameters('includePath')]",
          "Path": {
            "HttpUrl": "[parameters('COVID19Articles_Train')]"
          },
          "Separator": "[parameters('separator')]",
          "SourceType": "[parameters('sourceType')]"
        },
        "Registration": {
          "Description": "[parameters('datasetDescription')]",
          "Tags": "[parameters('tags')]"
        },
        "TimeSeries": {
          "FineGrainTimestamp": "[parameters('fineGrainTimestamp')]",
          "CoarseGrainTimestamp": "[parameters('coarseGrainTimestamp')]"
        }
      },

      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('amlworkspacename'))]"
      ]
    },

    {
      "type": "Microsoft.MachineLearningServices/workspaces/computes",
      "apiVersion": "2021-01-01",
      "name": "[concat(variables('amlworkspacename'), '/aml-compute-cpu')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "systemAssigned"
      },
      "dependsOn": [
        "[concat('Microsoft.MachineLearningServices/workspaces/',variables('amlworkspacename'))]"
      ],
      "properties": {
        "computeType": "AmlCompute",
        "computeLocation": "[resourceGroup().location]",
        "properties": {
          "vmSize": "STANDARD_DS3_V2",
          "vmPriority": "Dedicated",
          "scaleSettings": {
            "maxNodeCount": 2,
            "minNodeCount": 0,
            "nodeIdleTimeBeforeScaleDown": "PT2M"
          },
          "remoteLoginPortPublicAccess": "Enabled"
        }
      }
    },
    {
      "apiVersion": "2016-10-01",
      "name": "[variables('keyvaultname')]",
      "location": "[variables('location')]",
      "type": "Microsoft.KeyVault/vaults",
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enabledForDiskEncryption": false,

        "tenantId": "[variables('AzureTenantID')]",
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices",
            "virtualNetworkRules": [],
            "ipRules": []
          }
        },
        "accessPolicies": [
          {
            "tenantId": "[variables('AzureTenantID')]",
            "objectId": "[parameters('azuserobjectid')]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "Decrypt",
                "Encrypt",
                "UnwrapKey",
                "WrapKey",
                "Verify",
                "Sign",
                "Purge"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "Purge"
              ],
              "certificates": [
                "Get",
                "List",
                "Update",
                "Create",
                "Import",
                "Delete",
                "Recover",
                "Backup",
                "Restore",
                "ManageContacts",
                "ManageIssuers",
                "GetIssuers",
                "ListIssuers",
                "SetIssuers",
                "DeleteIssuers",
                "Purge"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[variables('appinsightname')]",
      "type": "microsoft.insights/components",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-08-01",
      "properties": {
        "ApplicationId": "[variables('appinsightname')]",
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaAIExtension"
      }
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[variables('containerregistryname')]",
      "location": "[resourceGroup().location]",
      "type": "Microsoft.ContainerRegistry/registries",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "kind": "Registry"
    },
    {
      "type": "Microsoft.Databricks/workspaces",
      "apiVersion": "2018-04-01",
      "name": "[variables('workspaceName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "premium"
      },
      "properties": {
        "ManagedResourceGroupId": "[variables('managedResourceGroupId')]"
      }
    },
    {
      "type": "Microsoft.Databricks/workspaces/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[concat(variables('workspaceName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/b24988ac-6180-42a0-ab88-20f7382dd24c/', variables('workspaceName'))))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Databricks/workspaces/', variables('workspaceName'))]"
      ],
      "properties": {
        "principalId": "[parameters('azuserobjectid')]",
        "principalType": "User",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
      }
    },
    {
      "apiVersion": "2017-04-18",
      "name": "[variables('cognitiveservicename')]",
      "location": "[variables('location')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "CognitiveServices",
      "sku": {
        "name": "S0"
      },
      "properties": {
        "apiProperties": {
          "statisticsEnabled": false
        }
      }
    },
    {
      "apiVersion": "2015-08-19",
      "name": "[variables('serviceName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "basic"
      },
      "type": "Microsoft.Search/searchServices",
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      }
    },
    {
      "apiVersion": "2016-02-01-preview",
      "name": "[variables('predictionname')]",
      "location": "westus",
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "LUIS",
      "sku": {
        "name": "S0"
      },
      "properties": {
        "customSubDomainName": "[variables('predictionname')]"
      }
    },
    {
      "apiVersion": "2016-02-01-preview",
      "name": "[variables('authoringName')]",
      "location": "westus",
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "LUIS.Authoring",
      "sku": {
        "name": "F0"
      },
      "properties": {
        "customSubDomainName": "[variables('authoringName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('predictionname'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2017-04-18",
      "name": "[variables('speechname')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "SpeechServices",
      "properties": {
        "privateEndpointConnections": [],
        "publicNetworkAccess": "Enabled"
      }
    }
  ],
  "outputs": {
    "ResourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().Name]"
    },
    "Subscription ID": {
      "type": "string",
      "value": "[subscription().subscriptionId]"
    },
    "Jump VM DNS Name": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName'), '2016-03-30').dnsSettings.fqdn]"
    },
    "VM Admin Username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "VM Admin Password": {
      "type": "string",
      "value": "[parameters('adminPassword')]"
    },
    "Storage Account Name": {
      "value": "[variables('storageAccountName')]",
      "type": "string"
    },
    "AML Workspace Name ": {
      "value": "[variables('amlworkspacename')]",
      "type": "string"
    },
    "DeploymentID": {
      "type": "String",
      "value": "[ parameters('DeploymentID')]"
    }
  }
}